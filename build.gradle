plugins {
	id 'java'
	id 'org.springframework.boot' version "${SpringBoot}"
	id 'io.spring.dependency-management' version "${SpringDepMan}"
}

group = 'com.example'
version = "${currency}-SNAPSHOT"

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation "org.springframework.boot:spring-boot-starter-data-jpa:${SpringBoot}"
	implementation "org.springframework.boot:spring-boot-starter-web:${SpringBoot}"
	implementation "org.liquibase:liquibase-core:${LiquibaseCore}"
	implementation "org.mapstruct:mapstruct:${Mapstruct}"
	implementation "org.springframework.boot:spring-boot-starter-thymeleaf:${SpringBoot}"
	implementation "org.springframework.boot:spring-boot-starter-validation:${SpringBoot}"
	implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${OpenApi}"
	compileOnly "org.projectlombok:lombok:${Lombok}"
	runtimeOnly "com.h2database:h2:${H2}"
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor:${SpringBoot}"
	annotationProcessor "org.projectlombok:lombok:${Lombok}"
	annotationProcessor "org.mapstruct:mapstruct-processor:${Mapstruct}"
	testImplementation "org.springframework.boot:spring-boot-starter-test:${SpringBoot}"
	testRuntimeOnly "org.junit.platform:junit-platform-launcher:${JunitLauncher}"
}

tasks.named('test') {
	useJUnitPlatform()
}
